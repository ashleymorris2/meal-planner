// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using RecipeProcessing.Infrastructure.Repositories;

#nullable disable

namespace RecipeProcessing.Infrastructure.Migrations
{
    [DbContext(typeof(RecipeDbContext))]
    [Migration("20240918000637_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("RecipeProcessing.Core.Entities.ImageHash", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Hash")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("RecipeId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("RecipeId");

                    b.ToTable("ImageHashes");
                });

            modelBuilder.Entity("RecipeProcessing.Core.Entities.Recipe", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<TimeSpan>("PreparationTime")
                        .HasColumnType("interval");

                    b.Property<int>("Servings")
                        .HasColumnType("integer");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<TimeSpan>("TotalTime")
                        .HasColumnType("interval");

                    b.HasKey("Id");

                    b.ToTable("Recipes");
                });

            modelBuilder.Entity("RecipeProcessing.Core.Entities.ImageHash", b =>
                {
                    b.HasOne("RecipeProcessing.Core.Entities.Recipe", "Recipe")
                        .WithMany()
                        .HasForeignKey("RecipeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Recipe");
                });

            modelBuilder.Entity("RecipeProcessing.Core.Entities.Recipe", b =>
                {
                    b.OwnsMany("RecipeProcessing.Core.Entities.Ingredient", "Ingredients", b1 =>
                        {
                            b1.Property<int>("Id")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("integer");

                            NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b1.Property<int>("Id"));

                            b1.Property<string>("Name")
                                .IsRequired()
                                .HasColumnType("text");

                            b1.Property<double>("Quantity")
                                .HasColumnType("double precision");

                            b1.Property<int>("RecipeId")
                                .HasColumnType("integer");

                            b1.Property<string>("Unit")
                                .HasColumnType("text");

                            b1.HasKey("Id");

                            b1.HasIndex("RecipeId");

                            b1.ToTable("Ingredient");

                            b1.WithOwner()
                                .HasForeignKey("RecipeId");
                        });

                    b.OwnsMany("RecipeProcessing.Core.Entities.InstructionStep", "Instructions", b1 =>
                        {
                            b1.Property<int>("Id")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("integer");

                            NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b1.Property<int>("Id"));

                            b1.Property<string>("Description")
                                .IsRequired()
                                .HasColumnType("text");

                            b1.Property<int>("RecipeId")
                                .HasColumnType("integer");

                            b1.Property<int>("StepNumber")
                                .HasColumnType("integer");

                            b1.HasKey("Id");

                            b1.HasIndex("RecipeId");

                            b1.ToTable("InstructionStep");

                            b1.WithOwner()
                                .HasForeignKey("RecipeId");
                        });

                    b.OwnsOne("RecipeProcessing.Core.Entities.NutritionalDetails", "NutritionPerServing", b1 =>
                        {
                            b1.Property<int>("RecipeId")
                                .HasColumnType("integer");

                            b1.Property<int>("Calories")
                                .HasColumnType("integer");

                            b1.Property<int>("Carbohydrates")
                                .HasColumnType("integer");

                            b1.Property<int>("Fat")
                                .HasColumnType("integer");

                            b1.Property<int>("Fiber")
                                .HasColumnType("integer");

                            b1.Property<int>("Protein")
                                .HasColumnType("integer");

                            b1.Property<double>("Salt")
                                .HasColumnType("double precision");

                            b1.Property<int>("SaturatedFat")
                                .HasColumnType("integer");

                            b1.Property<int>("Sugars")
                                .HasColumnType("integer");

                            b1.HasKey("RecipeId");

                            b1.ToTable("Recipes");

                            b1.WithOwner()
                                .HasForeignKey("RecipeId");
                        });

                    b.Navigation("Ingredients");

                    b.Navigation("Instructions");

                    b.Navigation("NutritionPerServing")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
